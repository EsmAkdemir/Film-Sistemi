<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fmNj/wNDCr6ab3NVAgAAAABJRU5ErkJggg==
</value>
  </data>
</root>